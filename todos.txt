
* clients should be given an array of host/port combinations to try to connect to

* priority lock request should be put at front of queue

* provide option to just use lockUuid, and not unlock fn

* lck.notify array should be a key/value hash

* allow lock-requestors to force their way to obtaining a lock
similar to unlock-requestors being able to force unlock even if they don't have the key

* https://github.com/uWebSockets/uWebSockets

* unlock may be callable more than once, that should not happen.

* on disconnection we could delete wsClientId key/val from this.wsToKeys
 but there should be no real need to do that since we won't have that many clients

 /////////////////

 created new benchmarks, you were right about some things - what really made a difference was using a random setTimeout,
 using that, things started to favor Lockfile and Warlock again. However, there is an extremely non-linear relationship
 between concurrency and performance, once you get concurrency above certain levels, the performance of lockfile and warlock
 just plummets, whereas LM stays fairly linear. There's a tremendous difference there, night and day.
 It's just a matter of how much concurrency you need. If you need a really high level of concurrency for your locking,
 LM is way way better.